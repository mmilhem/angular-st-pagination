/*!
 * angular-st-pagination v0.1.0-rc4
 * source: https://github.com/tilmanpotthof/angular-st-pagination
 * 
 * git-version: 011d6ea
 * Licence: MIT-LICENCE (https://raw.githubusercontent.com/tilmanpotthof/angular-st-pagination/master/LICENCE)
 */
angular.module("stPagination",[]),angular.module("stPagination").factory("Pagination",["indexUtil",function(a){function b(a){this.$inputCollection=a,this.$limit=10,this.$page=0,this.$cachedReducedIndices={}}function c(a){return a&&a.pagination instanceof b}function d(a,b){return angular.isNumber(a)?a:b}return b.hasPagination=c,angular.extend(b.prototype,{setInputCollection:function(a){this.$inputCollection=a,this.checkPageLimits()},paginatedInputCollection:function(){return this.$inputCollection.slice(this.start(),this.stop())},inputCollection:function(){return this.$inputCollection},start:function(){return this.offset()},stop:function(){var a=this.offset()+this.limit();return a<this.length()?a:this.length()},length:function(){return this.$inputCollection.length},setLimit:function(a){this.$limit=a},totalPages:function(){return Math.ceil(this.$inputCollection.length/this.limit())||1},offset:function(){return this.$page*this.$limit},page:function(){return this.$page},next:function(){this.$page+=1,this.checkPageLimits()},prev:function(){this.$page-=1,this.checkPageLimits()},limit:function(){return this.$limit},setPage:function(a){if(angular.isArray(a)){var b=Math.floor(a.length/2);this.$page=a[b]}else this.$page=a;this.checkPageLimits()},checkPageLimits:function(){this.$page<0?this.$page=0:this.$page>this.lastPage()&&(this.$page=this.lastPage())},onFirstPage:function(){return 0===this.page()},onLastPage:function(){return this.page()===this.lastPage()},onPage:function(a){return this.page()===a},lastPage:function(){return this.totalPages()-1},indices:function(){return a.range(this.totalPages())},reducedIndices:function(b,c){b=d(b,3),c=d(c,3);var e=this.indexCacheKey(b,c);if(this.$cachedReducedIndices[e])return this.$cachedReducedIndices[e];var f=this.page(),g=this.totalPages(),h=a.rangeBuilder(g).foldWithMidAndEdgeRangeForIndex(f,b,c),i=h.build();return this.$cachedReducedIndices[e]=i,i},indexCacheKey:function(a,b){return this.page()+"-"+this.limit()+"-"+this.length()+"-"+a+"-"+b},isIndex:function(a){return angular.isNumber(a)},displayPage:function(){return this.page()+1},displayStart:function(){return this.start()+1}}),b}]),angular.module("stPagination").filter("pagination",["Pagination","findPropertyName",function(a,b){return function(c,d){var e;if(c){if(e=d?d:c,!a.hasPagination(e)&&(e.pagination=new a(c),this&&this.$watch)){var f=b(e,this);if(!f)throw new Error("Collection passed to pagination filter was not found in the scope. Pass it to the filter if you have other filters in between.\nelement in collection | orderBy:'id' | pagination:collection");this.$watch(f,function(b,c){a.hasPagination(c)&&(b.pagination=c.pagination)})}var g=e.pagination;return g.setInputCollection(c),g.paginatedInputCollection()}}}]),angular.module("stPagination").factory("findPropertyName",function(){function a(b,c){try{angular.isObject(c)&&angular.forEach(c,function(d,e){if(d!==c&&("$"!==e[0]||"$parent"===e)){if(d===b)throw e;var f=a(b,c[e]);if(f)throw e+"."+f}})}catch(d){return d}}return a}),angular.module("stPagination").factory("indexUtil",function(){function a(a){this.array=a,this.lastIndex=a.length-1}function b(a){return Array.apply(null,new Array(a)).map(function(a,b){return b})}function c(c){return new a(b(c))}return angular.extend(a.prototype,{build:function(){return this.array},foldGreaterThan:function(a){return this.foldRange(a+1,this.lastIndex)},foldGreaterEquals:function(a){return this.foldRange(a,this.lastIndex)},foldLessThan:function(a){return this.foldRange(0,a-1)},foldLessEquals:function(a){return this.foldRange(0,a)},foldRange:function(a,b){var c=this.array,d=this.array=[];return c.forEach(function(c){if(a>c||c>b||angular.isArray(c))d.push(c);else{var e=d[d.length-1];angular.isArray(e)?e.push(c):d.push([c])}}),this},foldFixedLengthForIndex:function(a,b){return this.foldWithMidAndEdgeRangeForIndex(a,b,b)},foldWithMidAndEdgeRangeForIndex:function(a,b,c){var d=0+c,e=a-b,f=a+b,g=this.lastIndex-c;return c+b>=a?(d=c+2*b,this.foldRange(d,g)):a>=this.lastIndex-(c+b)?(g=this.lastIndex-(c+2*b),this.foldRange(d,g)):this.foldRange(d,e).foldRange(f,g)}}),{range:b,rangeBuilder:c}}),angular.module("stPagination").filter("displayPaginationIndex",function(){return function(a){return angular.isNumber(a)?a+1:angular.isArray(a)?"...":a}}),angular.module("stPagination").directive("stPaginationLimit",["Pagination","$log",function(a){var b=[10,20,50];return{restrict:"E",replace:!0,template:'<select ng-options="limit for limit in limits()" ng-model="pagination.$limit"></select>',scope:{collection:"=",getLimits:"&limits"},link:function(c){c.limits=function(){return c.getLimits()||b},c.$watch("collection",function(b){a.hasPagination(b)&&(c.pagination=b.pagination)})}}}]),angular.module("stPagination").directive("stPagination",["Pagination",function(a){var b=["-webkit-touch-callout","-webkit-user-select","-moz-user-select","-ms-user-select","user-select"],c='<ul><li ng-class="{disabled: pagination.onFirstPage()}"><a ng-click="pagination.prev()">&laquo;</a></li><li ng-class="{active: pagination.onPage(index)}" ng-repeat="index in pagination.reducedIndices(midRange, edgeRange)"><a ng-click="pagination.setPage(index)">{{ index | displayPaginationIndex }}</a></li><li ng-class="{disabled: pagination.onLastPage()}"><a ng-click="pagination.next()">&raquo;</a></li></ul>',d={list:function(a){a.addClass("pagination")},divWrappedList:function(a){a.wrap('<div class="pagination"></div>')}};d.bootstrap3=d.list,d.bootstrap2=d.divWrappedList;var e="'"+Object.keys(d).join("', '")+"'",f="bootstrap3";return{restrict:"E",replace:!0,scope:{collection:"=",edgeRange:"=",midRange:"="},template:c,compile:function(a,b){var c=b.cssConfig||f,g=d[c];if(!angular.isFunction(g))throw new Error("Given css-config attribute '"+b.cssConfig+"' is not in allowed values "+e);g(a)},controller:["$scope","$element","$attrs",function(c,d,e){angular.forEach(b,function(a){d.css(a,"none")});var f=e.collection;c.$watch("collection",function(b){if(angular.isArray(b)){if(!a.hasPagination(b))throw new Error("Collection '"+f+"' in the pagination directive is not used with a neccessary pagination filter.");c.pagination=b.pagination}})}]}}]),angular.module("stPagination").filter("pageInfo",["Pagination",function(a){var b={total:"length",totalPages:"totalPages",currentPage:"displayPage",startIndex:"displayStart",stopIndex:"stop"};return function(c,d){if(a.hasPagination(c)&&d){var e=b[d];if(!e)throw new Error("No display property '"+d+"' defined for the pageInfo filter");return c.pagination[e]()}return c}}]);